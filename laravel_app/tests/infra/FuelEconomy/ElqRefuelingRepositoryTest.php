<?php

namespace Tests\infra\FuelEconomy;

use App\Domain\Object\FuelEconomy\FuelEconomy;
use App\Domain\Object\FuelEconomy\Refueling;
use App\infra\FuelEconomy\ElqRefuelingRepository;
//use PHPUnit\Framework\TestCase;
use App\infra\FuelEconomy\RefuelingModelBuilder;
use Illuminate\Support\Facades\DB;
use Tests\TestCase;

class ElqRefuelingRepositoryTest extends TestCase
{

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $pdo = DB::getPdo();
        $stmt = $pdo->prepare('truncate refuelings');
        $stmt->execute();

    }

    /**
     * @throws \Exception
     */
    public function test_save(){
        $elqRefuelingRepository = new ElqRefuelingRepository();
        $refueling = new Refueling(null,
            new FuelEconomy(30,450),
            'hanna','jikka');
        $elqRefuelingRepository->save($refueling);

        $refueling2 = new Refueling(null,
            new FuelEconomy(31,500),
            'miki','ryokou');
        $elqRefuelingRepository->save($refueling2);


        $refueling2 = $elqRefuelingRepository->find(2);
        $this->assertTrue( $refueling2 instanceof Refueling);


        // Reflectionクラスをインスタンス化
        $reflectionClass = new \ReflectionClass($refueling2);
        // プロパティの値を取得
        $p_memo = $reflectionClass->getProperty('memo');
        // privateプロパティのアクセス範囲を設定（trueを指定でアクセスできるようになる）
        $p_memo->setAccessible(true);
        $p_memo_value = $p_memo->getValue($refueling2);
        $this->assertSame( 'ryokou',$p_memo_value);


        $refueling2->updateMemo('bonyasumi,tes');

        $p_memo_value = $p_memo->getValue($refueling2);
        $this->assertSame( 'bonyasumi,tes',$p_memo_value);

        $elqRefuelingRepository->save($refueling2);
    }
}
