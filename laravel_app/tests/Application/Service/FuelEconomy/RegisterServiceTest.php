<?php

namespace Tests\Application\Service\FuelEconomy;

use App\Application\Service\Refuelings\RegisterService;
use App\Domain\Model\Refuelings\IRefuelingRepository;
use App\Domain\Model\Refuelings\UpdateRefuelingCommand;
use App\infra\EloquentRepository;
//use PHPUnit\Framework\TestCase;
use Illuminate\Support\Facades\DB;
use Tests\TestCase;

class RegisterServiceTest extends TestCase
{
    private RegisterService $registerService;
    private IRefuelingRepository $refuelingRepository;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $pdo = DB::getPdo();
        $stmt = $pdo->prepare('truncate refuelings');
        $stmt->execute();
        $this->registerService = app()->make(RegisterService::class);
        $this->refuelingRepository = app()->make(IRefuelingRepository::class);
    }
    protected function tearDown(): void
    {
        $pdo = DB::getPdo();
        $stmt = $pdo->prepare('truncate refuelings');
        $stmt->execute();
        parent::tearDown(); // TODO: Change the autogenerated stub
    }
    /**
     * @test
     * @throws \Exception
     */
    public function test_regist(){

        $updateRefuelingCommand = new UpdateRefuelingCommand(
            null
            ,new \DateTime('2021-07-01')
            ,21
            ,356
            ,'miki'
            ,'yasumi');

        $refueling_id = $this->registerService->regist($updateRefuelingCommand, 1);

        $updateRefuelingCommand2 = new UpdateRefuelingCommand(
            null
            ,new \DateTime('2021-07-01')
            ,42
            ,556
            ,'tokyo'
            ,'sigoto');

        $refueling_id2 = $this->registerService->regist($updateRefuelingCommand2, 1);

        //        sleep(1);

        $refueling = $this->refuelingRepository->find($refueling_id2,1 );
        $updateRefuelingCommand3 = new UpdateRefuelingCommand(
            $refueling->getId()
            ,new \DateTime('2021-07-01')
            ,41
            ,556
            ,'mikisi'
            ,'yasumisi');
        $refueling_id3 = $this->registerService->regist($updateRefuelingCommand3, 1);
        $refueling = $this->refuelingRepository->find($refueling_id3,1);
        $this->assertSame(round(556/41,2), $refueling->calcFuelEconomy());

    }
}
