<?php

namespace Tests\Application\Service\FuelEconomy;

use App\Application\Service\FuelEconomy\RegisterService;
use App\Domain\Model\FuelEconomy\IRefuelingRepository;
use App\Domain\Model\FuelEconomy\UpdateRefuelingCommand;
use App\infra\EloquentRepository;
//use PHPUnit\Framework\TestCase;
use Tests\TestCase;

class RegisterServiceTest extends TestCase
{
    private RegisterService $registerService;
    private IRefuelingRepository $refuelingRepository;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->registerService = app()->make(RegisterService::class);
        $this->refuelingRepository = app()->make(IRefuelingRepository::class);
    }

    /**
     * @test
     * @throws \Exception
     */
    public function test_regist(){

        $updateRefuelingCommand = new UpdateRefuelingCommand(
            null
            ,21
            ,356
            ,'miki'
            ,'yasumi');

        $refueling_id = $this->registerService->regist($updateRefuelingCommand);

        $updateRefuelingCommand2 = new UpdateRefuelingCommand(
            null
            ,42
            ,556
            ,'tokyo'
            ,'sigoto');

        $refueling_id2 = $this->registerService->regist($updateRefuelingCommand2);

        sleep(1);

        $refueling = $this->refuelingRepository->find($refueling_id2);
        $updateRefuelingCommand3 = new UpdateRefuelingCommand(
            $refueling->getId()
            ,null
            ,900
            ,'mikisi'
            ,'yasumisi');
        $refueling_id3 = $this->registerService->regist($updateRefuelingCommand3);
        $refueling = $this->refuelingRepository->find($refueling_id3);
        $this->assertSame(21.43, $refueling->calcFuelEconomy());

    }
}
