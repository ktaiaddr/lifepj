version: '3'

volumes:
  db_data_volume:

services:
  db:
    image: mysql:8.0.24
    environment:
      - MYSQL_ROOT_PASSWORD=$DB_PASS
      - TZ=Asia/Tokyo
      - BIND-ADDRESS=0.0.0.0
    volumes:
      - db_data_volume:/var/lib/mysql
      - ./docker_config/mysql_db/my.cnf:/etc/mysql/my.cnf
    ports:
      - "30306:3306"
    tty: true
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_bin

  mail:
    image: "mailhog/mailhog"
    ports:
      - "8025:8025"
    tty: true

  web:
    build:
      context: docker_config/php-fpm_nginx
      dockerfile: Dockerfile
    environment:
      - DB_PASSWORD=${DB_PASS}
    ports:
      - "9000:80"
    volumes:
      - ./:/opt
      - ./docker_config/php-fpm_nginx/zz-www.conf:/usr/local/etc/php-fpm.d/zz-www.conf
      - ./docker_config/php-fpm_nginx/nginx.conf:/etc/nginx/http.d/nginx.conf.template
    working_dir: /opt
    tty: true
    entrypoint: /bin/sh
    command: >
      -c "
          if [ ! -d /run/nginx ] ; then mkdir /run/nginx ; fi
          if [ ! -d /run/php ] ; then mkdir /run/php ; fi
          sed -i -e 's/user nginx;/user www-data;/g' /etc/nginx/nginx.conf;
          deluser www-data;
          adduser -u 1000 -s /sbin/nologin -D www-data;
          php-fpm -D;
          envsubst 80 < /etc/nginx/http.d/nginx.conf.template > /etc/nginx/http.d/nginx.conf;
          nginx -g \"daemon off;\";
      "

  nodejs:
    image: node:14.16.1-alpine
    working_dir: /opt/react_app
    volumes:
      - ./:/opt
    user: ${LOCAL_USER_ID}
    tty: true



